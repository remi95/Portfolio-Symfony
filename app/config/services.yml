# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    admin.experience:
        class: Rm\PortfolioBundle\Admin\ExperienceAdmin
        arguments: [~, Rm\PortfolioBundle\Entity\Experience, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Portoflio, label: Experience }
        public: true

    admin.diplome:
            class: Rm\PortfolioBundle\Admin\DiplomeAdmin
            arguments: [~, Rm\PortfolioBundle\Entity\Diplome, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, group: Portoflio, label: Diplome }
            public: true

    admin.competence:
            class: Rm\PortfolioBundle\Admin\CompetenceAdmin
            arguments: [~, Rm\PortfolioBundle\Entity\Competence, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, group: Portoflio, label: Competence }
            public: true

    admin.projet:
            class: Rm\PortfolioBundle\Admin\ProjetAdmin
            arguments: [~, Rm\PortfolioBundle\Entity\Projet, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, group: Portoflio, label: Projet }
            public: true

    admin.tag:
            class: Rm\PortfolioBundle\Admin\TagAdmin
            arguments: [~, Rm\PortfolioBundle\Entity\Tag, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, group: Portoflio, label: Tag }
            public: true

    admin.article:
            class: Rm\BlogBundle\Admin\ArticleAdmin
            arguments: [~, Rm\BlogBundle\Entity\Article, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, group: Blog, label: Article }
            public: true

    admin.categorie:
            class: Rm\BlogBundle\Admin\CategorieAdmin
            arguments: [~, Rm\BlogBundle\Entity\Categorie, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, group: Blog, label: Categorie }
            public: true

    admin.commentaire:
                class: Rm\BlogBundle\Admin\CommentaireAdmin
                arguments: [~, Rm\BlogBundle\Entity\Commentaire, ~]
                tags:
                    - { name: sonata.admin, manager_type: orm, group: Blog, label: Commentaire }
                public: true

    rm.form.registration:
            class: Rm\MainBundle\Form\RegistrationType
            tags:
                - { name: form.type, alias: rm_user_registration }

    rm.form.profile:
                class: Rm\MainBundle\Form\ProfileType
                tags:
                    - { name: form.type, alias: rm_user_profile }